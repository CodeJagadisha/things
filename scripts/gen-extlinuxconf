#!/bin/bash
#
# Simple config generator for extlinux (syslinux).
#
# Copyright (c) 2011, Piotr Karbowski <piotr.karbowski@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice, this
#   list of conditions and the following disclaimer in the documentation and/or other
#   materials provided with the distribution.
# * Neither the name of the Piotr Karbowski nor the names of its contributors may be
#   used to endorse or promote products derived from this software without specific
#   prior written permission.

## config
menu_entry_name="Gentoo Linux"
kernel_params="rootfstype=ext4 luks enc_root=/dev/sda2 lvm root=/dev/mapper/vg-rootfs"
initramfs="initramfs.cpio.gz"
##

if [ "$(stat -c '%d' '/')" = "$(stat -c '%d' '/boot')" ]; then
	bootdir='/boot'
else
	bootdir=''
fi

echo "# This configuration file was generated automatically by gen-extlinuxconf.

TIMEOUT 30
UI menu.c32

MENU TITLE Boot Menu
MENU COLOR title	1;37;40
MENU COLOR border	30;40
MENU COLOR unsel	37;40
"

# The 'biggest' version kernel first.
for bzImage in $(sort -r < <(printf '%s\n' /boot/bzImage-*)); do
	kernelimages+=( "${kernelimage##*/}" )
	kernelentrynumber="${kernelentrynumber:-1}"
	echo "LABEL kernel${kernelentrynumber}_${bzImage##*/}"
	echo "	MENU LABEL ${menu_entry_name} ${bzImage##*/}"
	echo "	LINUX ${bootdir}/${bzImage##*/}"
	if [ -n "${initramfs}" ] && [ -f "/boot/${initramfs}" ]; then
		echo "	INITRD ${bootdir}/${initramfs}"
	fi
	if [ -n "${kernel_params}" ]; then
		echo "	APPEND ${kernel_params}"
	fi

	kernelentrynumber="$((kernelentrynumber+1))"
	echo
done

if [ -f '/boot/extlinux/memdisk' ]; then
	for diskimage in /boot/*.iso /boot/*.img; do
		# Skip images with initrd or initramfs prefix.
		if [[ "${diskimage##*/}" =~ ^initrd.*$ ]] || [[ "${diskimage##*/}" =~ ^initramfs.*$ ]]; then continue; fi
		memdiskentrynumber=${memdiskentrynumber:-1}
		imagesize="$(($(stat -c '%s' "${diskimage}")/1024/1024))"
		echo "LABEL memdisk${memdiskentrynumber}_${diskimage##*/}"
		echo "	MENU LABEL Boot image: '${diskimage##*/}' (${imagesize} MB)"
		echo "	LINUX memdisk"
		echo "	INITRD ${bootdir}/${diskimage##*/}"
		if [[ "${diskimage##*/}" =~ ^.*.iso$ ]]; then
			echo "	APPEND iso"
		elif [[ "${diskimage##*/}" =~ ^.*.img$ ]]; then
			echo "	APPEND raw"
		fi
		echo
	done
fi
